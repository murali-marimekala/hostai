name: Security and Quality Checks

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  security-check:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Check for sensitive files
      run: |
        # Check if any sensitive files are being committed
        if git ls-files | grep -E "\.(db|sqlite|pkl|h5|pb|log)$"; then
          echo "❌ Sensitive files detected in commit:"
          git ls-files | grep -E "\.(db|sqlite|pkl|h5|pb|log)$"
          exit 1
        fi

        # Check for sensitive patterns in committed files
        if git grep -l "password\|secret\|key\|token\|api_key" -- "*.py" "*.yaml" "*.yml" "*.md" "*.txt"; then
          echo "❌ Sensitive patterns found in committed files:"
          git grep -l "password\|secret\|key\|token\|api_key" -- "*.py" "*.yaml" "*.yml" "*.md" "*.txt"
          exit 1
        fi

        echo "✅ No sensitive files or patterns detected"

    - name: Check .gitignore coverage
      run: |
        # Ensure .gitignore exists and is not empty
        if [ ! -f .gitignore ]; then
          echo "❌ .gitignore file is missing"
          exit 1
        fi

        # Check if .gitignore has sensitive file patterns
        if ! grep -q "\*\.db" .gitignore; then
          echo "❌ .gitignore missing database file exclusions"
          exit 1
        fi

        if ! grep -q "\*\.log" .gitignore; then
          echo "❌ .gitignore missing log file exclusions"
          exit 1
        fi

        echo "✅ .gitignore properly configured"

  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black isort bandit safety

    - name: Lint with flake8
      run: |
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Check code formatting with black
      run: black --check --diff src/

    - name: Check import sorting with isort
      run: isort --check-only --diff src/

    - name: Security scan with bandit
      run: bandit -r src/ -f json -o bandit-report.json || true

    - name: Check for vulnerable dependencies
      run: safety check

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-scan-results
        path: bandit-report.json

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov

    - name: Run tests
      run: |
        pytest tests/ -v --cov=src/ --cov-report=xml

    - name: Upload coverage reports
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.xml

  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: pip install -r requirements.txt

    - name: Build package
      run: python setup.py sdist bdist_wheel || python -m build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        path: dist/